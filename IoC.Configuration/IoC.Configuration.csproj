<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup Label="Globals">
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>2.0.2</Version>
    <PackageTags>IoC Configuration IoC+Configuration dependency+injection inversion+of+control Autofac Ninject IoC.Configuration dependency+injection+configuration</PackageTags>
    <Authors>Artak Hakobyan</Authors>
    <Company>OROptimizer</Company>
    <Description>The main functions of IoC.Configuration library are:

1)  Container agnostic configuration of dependency injection using XML configuration file. The file has section where container can be specified, that will be handling dependency injection resolutions.
Currently two popular containers are supported, Ninject and Autofac, via extension libraries IoC.Configuration.Ninject and IoC.Configuration.Autofac, that are available in Nuget.org.
The dependency injection container (e.g., Autofac, Ninject) can be easily switched in configuration file.

In addition, the configuration file has sections for settings, plugins, startup actions, dynamically generated implementations of interfaces (see autoService elements under  iocConfiguration/dependencyInjection/autoGeneratedServices in example configuration files in GitHub test projects in https://github.com/artakhak/IoC.Configuration/tree/master/IoC.Configuration.Tests). 
  
2) Container agnostic configuration of dependency injection in code. 


The bindings are specified using IoC.Configuration chained methods, however the actual resolutions are done using one of the popular dependency injection containers, Ninject and Autofac, via extension libraries IoC.Configuration.Ninject and IoC.Configuration.Autofac.
Note: Use either IoC.Configuration.Ninject 2.0.0 or higher, or IoC.Configuration.Autofac 2.0.0 with IoC.Configuration.Autofac 2.x.x.</Description>
    <Copyright>Copyright 2018 (c) OROptimizer. All rights reserved.</Copyright>
    <PackageReleaseNotes>-Reverted the value of property "Build Action" of the schema file "IoC.Configuration.Schema.2F7CE7FF-CB22-40B0-9691-EAC689C03A36.xsd"  back to "Content", so that the file is included in package. This file is needed only for editting the configuration files in XML editors like Visual Studio, other that, the schema file is not needed, since it is an embedded resource as of  version 2.0.1.

-Added a copy of this file with property  "Build Action" set to "Embedded resource".</PackageReleaseNotes>
    <PackageLicenseUrl>https://opensource.org/licenses/mit-license.php</PackageLicenseUrl>
    <RepositoryUrl>https://github.com/artakhak/IoC.Configuration</RepositoryUrl>
    <PackageProjectUrl>http://iocconfiguration.readthedocs.io</PackageProjectUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <AssemblyVersion>2.0.2.0</AssemblyVersion>
    <FileVersion>2.0.2.0</FileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;NETSTANDARD2_0</DefineConstants>
    <DocumentationFile>bin\Debug\netstandard2.0\IoC.Configuration.xml</DocumentationFile>
    <NoWarn>1701;1702;1705;1591</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netstandard2.0\IoC.Configuration.xml</DocumentationFile>
    <NoWarn>1701;1702;1705;1591;</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="JetBrains.Annotations" Version="10.2.1" />
    <PackageReference Include="Microsoft.CodeAnalysis" Version="2.3.2" />
    <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
    <PackageReference Include="OROptimizer.Shared" Version="2.0.0" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="IoC.Cnfiguration.Content/*.*" copyToOutput="true">
      <IncludeInPackage>true</IncludeInPackage>
      <CopyToOutput>true</CopyToOutput>
      <BuildAction>Content</BuildAction>
      <copyToOutput>true</copyToOutput>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="EmbeddedResources\IoC.Configuration.Schema.2F7CE7FF-CB22-40B0-9691-EAC689C03A36.xsd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
    <Content Include="IoC.Configuration.Content\IoC.Configuration.Schema.2F7CE7FF-CB22-40B0-9691-EAC689C03A36.xsd">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="IoC.Configuration.Content\IoC.Configuration.Template.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\IoC.Configuration.licenseheader" Link="IoC.Configuration.licenseheader" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="ConfigurationFile\ParameterElementBase.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="EmbeddedResources\IoC.Configuration.Schema.2F7CE7FF-CB22-40B0-9691-EAC689C03A36.xsd" />
  </ItemGroup>
</Project>