// Copyright (c) IoC.Configuration Project. All rights reserved.
// Licensed under the MIT License. See LICENSE in the solution root for license information.

using JetBrains.Annotations;
using OROptimizer.DynamicCode;
using OROptimizer.ServiceResolver;
using System;

namespace IoC.Configuration.ConfigurationFile
{
    /// <summary>
    /// Generates an implementation class for interfaces specified in autoServiceCustom element in configuration file.
    /// </summary>
    public interface ICustomAutoServiceCodeGenerator
    {
        /// <summary>
        /// Validates the configuration of "autoServiceCustom" element.
        /// Throws an exception if the configuration is invalid.
        /// </summary>
        /// <param name="customAutoGeneratedServiceInfo"></param>
        void Validate([NotNull] ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo);
        
        /// <summary>
        /// Generates a C# code for the auto-implemented interface specified in "autoServiceCustom" element.
        /// </summary>
        /// <param name="customAutoGeneratedServiceInfo">Configuration of auto-implemented service configuration.</param>
        /// <param name="dynamicAssemblyBuilder">
        /// An instance of <see cref="IDynamicAssemblyBuilder"/>.
        /// Use methods <see cref="IDynamicAssemblyBuilder.StartDynamicallyGeneratedClass(string, string)"/>,
        /// <see cref="IDynamicAssemblyBuilder.StartDynamicallyGeneratedClass(string, System.Collections.Generic.IEnumerable{string}, string)"/>,
        /// <see cref="IDynamicAssemblyBuilder.AddCSharpFile(string)"/>, etc., to generate the C# code for the implementation. 
        /// </param>
        /// <param name="generatedClassNamespace">The generated class namespace.</param>
        /// <param name="generatedClassName">The generated class name without namespace.</param>
        void GenerateCSharp([NotNull] ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo,
            [NotNull] IDynamicAssemblyBuilder dynamicAssemblyBuilder,
            [NotNull] string generatedClassNamespace, [NotNull] string generatedClassName);

        /// <summary>
        /// Validates the configuration of "autoServiceCustom" element after the IoC container is loaded.
        /// Throws an exception if the configuration is invalid.
        /// </summary>
        /// <param name="diContainer">The IoC container. Use IDiContainer.<see cref="IServiceResolver.Resolve(Type)"/> to resolve types.</param>
        /// <param name="customAutoGeneratedServiceInfo">Information about auto-implemented interface.</param>
        void ValidateOnIoCContainerLoaded([NotNull] DiContainer.IDiContainer diContainer, [NotNull] ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo);
    }
}
