<?xml version="1.0" encoding="utf-8"?>

<!--
   The XML configuration file is validated against schema file IoC.Configuration.Schema.7579ADB2-0FBD-4210-A8CA-EE4B4646DB3F.xsd, 
   which can be found in folder IoC.Configuration.Content in output directory. 
   The schema file can also be downloaded from 
   http://oroptimizer.com/ioc.configuration/V2/IoC.Configuration.Schema.7579ADB2-0FBD-4210-A8CA-EE4B4646DB3F.xsd or in source code 
   project in Github.com.
   
   To use Visual Studio code completion based on schema contents, right click Properties on this file in Visual Studio, and in Schemas 
   field pick the schema IoC.Configuration.Schema.7579ADB2-0FBD-4210-A8CA-EE4B4646DB3F.xsd.

    Before running the test make sure to execute IoC.Configuration\Tests\IoC.Configuration.Tests\PostBuildCommands.bat to copy the dlls into 
    folders specified in this configuration file.
    Also, modify the batch file to copy the Autofac and Ninject assemblies from Nuget packages folder on machine, where the test is run.
-->

<iocConfiguration
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xsi:noNamespaceSchemaLocation="http://oroptimizer.com/IoC.Configuration/V2/IoC.Configuration.Schema.7579ADB2-0FBD-4210-A8CA-EE4B4646DB3F.xsd">
	<!--The application should have write permissions to path specified in appDataDir. 
    This is where dynamically generated DLLs are saved.-->
	<!--NOTE: path should be an absolute path, or should be converted to absolute path by some implementation of 
	IoC.Configuration.AttributeValueTransformer.IAttributeValueTransformer. In this example the paths are converted by 
	IoC.Configuration.Tests.FileFolderPathAttributeValueTransformer.-->
	<appDataDir
        path="TestFiles\AutogeneratedDlls\IoCConfiguration2" />
    <plugins>
    </plugins>

    <additionalAssemblyProbingPaths>
        <probingPath
            path="TestFiles\ThirdPartyLibs" />
        <probingPath
            path="TestFiles\ContainerImplementations\Autofac" />
        <probingPath
            path="TestFiles\ContainerImplementations\Ninject" />
    </additionalAssemblyProbingPaths>

    <assemblies>
        <assembly name="IoC.Configuration.Tests" alias="tests" />
        <assembly name="IoC.Configuration.Autofac" alias="autofac_ext" />
        <assembly name="IoC.Configuration.Ninject" alias="ninject_ext" />
    </assemblies>

    <parameterSerializers>
        <serializers>
        </serializers>
    </parameterSerializers>

    <!--The value of type attribute should be a type that implements IoC.Configuration.DiContainer.IDiManager-->
    <diManagers activeDiManagerName="Autofac">
        <diManager name="Ninject" type="IoC.Configuration.Ninject.NinjectDiManager" assembly="ninject_ext">
        </diManager>
        <diManager name="Autofac" type="IoC.Configuration.Autofac.AutofacDiManager" assembly="autofac_ext">
        </diManager>
    </diManagers>

    <settings>
    </settings>

    <dependencyInjection>
        <modules>
            <module type="IoC.Configuration.Tests.SuccessfulDiModuleLoadTests.TestDiModule" assembly="tests">
            </module>
        </modules>
        <services>
        </services>
        <autoGeneratedServices>
        </autoGeneratedServices>
    </dependencyInjection>

    <startupActions>
    </startupActions>

    <pluginsSetup>
    </pluginsSetup>
</iocConfiguration>