REM In Visual Studio post build event use this command to execute the batch 
REM call $(ProjectDir)PostBuildCommands.bat $(ConfigurationName) $(SolutionDir)

REM Example of calling in command line:
REM cd K:\...\IoC.Configuration\IoC.Configuration.Tests
REM PostBuildCommands.bat Debug K:\...\IoC.Configuration\

REM ConfigurationName is either Debug or Release

SET ConfigurationName=%1
SET SolutionDir=%2

SET "NugetPackagesDir=%USERPROFILE%\.nuget\packages"
SET "TestFiles=%SolutionDir%IoC.Configuration.Tests\bin\TestFiles"
SET "PluginDlls=%TestFiles%\PluginDlls"
SET "ThirdPartyLibsDir=%TestFiles%\ThirdPartyLibs"
SET "AutogeneratedDlls=%TestFiles%\AutogeneratedDlls"

REM Create test folders
if not exist "%TestFiles%" mkdir "%TestFiles%"
if not exist "%PluginDlls%" mkdir "%PluginDlls%"
if not exist "%ThirdPartyLibsDir%" mkdir "%ThirdPartyLibsDir%"
if not exist "%AutogeneratedDlls%" mkdir "%AutogeneratedDlls%"

REM Copy third party libraries
xcopy "%NugetPackagesDir%\ninject\3.3.4\lib\netstandard2.0\Ninject.*" "%ThirdPartyLibsDir%" /Y
xcopy "%NugetPackagesDir%\autofac\4.5.0\lib\netstandard1.1\Autofac.*" "%ThirdPartyLibsDir%" /Y
xcopy "%NugetPackagesDir%\autofac.extensions.dependencyinjection\4.0.0\lib\netstandard1.1\Autofac.Extensions.DependencyInjection.*" "%ThirdPartyLibsDir%" /Y

REM Copy IoC extensions

if not exist "%TestFiles%\ContainerImplementations" mkdir "%TestFiles%\ContainerImplementations"
if not exist "%TestFiles%\ContainerImplementations\Autofac" mkdir "%TestFiles%\ContainerImplementations\Autofac"
if not exist "%TestFiles%\ContainerImplementations\Ninject" mkdir "%TestFiles%\ContainerImplementations\Ninject"

REM Enable the code that copies from %NugetPackagesDir% to copy the IoC.Configuration.Autofac and IoC.Configuration.Ninject packages from Nuget
xcopy "%NugetPackagesDir%\ioc.configuration.autofac\2.0.1\lib\netstandard2.0\IoC.Configuration.Autofac.*"  %TestFiles%\ContainerImplementations\Autofac /Y
xcopy "%NugetPackagesDir%\ioc.configuration.ninject\2.1.0\lib\netstandard2.0\IoC.Configuration.Ninject.*"  %TestFiles%\ContainerImplementations\Ninject /Y

REM Enable the code that copies from "%TestFiles%\ContainerImplementations" to copy the IoC.Configuration.Autofac and IoC.Configuration.Ninject packages built by solution
REM xcopy "%SolutionDir%IoC.Configuration.Autofac\bin\%ConfigurationName%\IoC.Configuration.Autofac.*"  "%TestFiles%\ContainerImplementations\Autofac" /Y
REM xcopy "%SolutionDir%IoC.Configuration.Ninject\bin\%ConfigurationName%\IoC.Configuration.Ninject.*"  "%TestFiles%\ContainerImplementations\Ninject" /Y

REM copy DynamicallyLoadedDlls
if not exist "%TestFiles%\TestAssemblyResolution" mkdir "%TestFiles%\TestAssemblyResolution"
xcopy "%SolutionDir%TestProjects.AssemblyToTestAssemblyResolution\bin\%ConfigurationName%\TestProjects.AssemblyToTestAssemblyResolution.*"  "%TestFiles%\TestAssemblyResolution" /Y

if not exist "%TestFiles%\DynamicallyLoadedDlls" mkdir "%TestFiles%\DynamicallyLoadedDlls"
xcopy "%SolutionDir%TestProjects.Modules\bin\%ConfigurationName%\TestProjects.Modules.*"  %TestFiles%\DynamicallyLoadedDlls /Y
xcopy "%SolutionDir%TestProjects.DynamicallyLoadedAssembly1\bin\%ConfigurationName%\TestProjects.DynamicallyLoadedAssembly1.*"  "%TestFiles%\DynamicallyLoadedDlls" /Y
xcopy "%SolutionDir%TestProjects.DynamicallyLoadedAssembly2\bin\%ConfigurationName%\TestProjects.DynamicallyLoadedAssembly2.*"  "%TestFiles%\DynamicallyLoadedDlls" /Y
xcopy "%SolutionDir%TestProjects.TestForceLoadAssembly\bin\%ConfigurationName%\TestProjects.TestForceLoadAssembly.*"  "%TestFiles%\DynamicallyLoadedDlls" /Y

REM copy plugin DLLs

if not exist "%PluginDlls%\Plugin1" mkdir "%PluginDlls%\Plugin1"
xcopy "%SolutionDir%TestProjects.TestPluginAssembly1\bin\%ConfigurationName%\TestProjects.TestPluginAssembly1.*"  "%PluginDlls%\Plugin1" /Y
xcopy "%SolutionDir%TestProjects.ModulesForPlugin1\bin\%ConfigurationName%\TestProjects.ModulesForPlugin1.*"  "%PluginDlls%\Plugin1" /Y
xcopy "%SolutionDir%TestProjects.Plugin1WebApiControllers\bin\%ConfigurationName%\TestProjects.Plugin1WebApiControllers.*"  "%PluginDlls%\Plugin1" /Y

if not exist "%PluginDlls%\Plugin2" mkdir "%PluginDlls%\Plugin2"
xcopy "%SolutionDir%TestProjects.TestPluginAssembly2\bin\%ConfigurationName%\TestProjects.TestPluginAssembly2.*"  "%PluginDlls%\Plugin2" /Y
xcopy "%SolutionDir%TestProjects.ModulesForPlugin2\bin\%ConfigurationName%\TestProjects.ModulesForPlugin2.*"  "%PluginDlls%\Plugin2" /Y

if not exist "%PluginDlls%\Plugin3" mkdir "%PluginDlls%\Plugin3"
xcopy "%SolutionDir%TestProjects.TestPluginAssembly3\bin\%ConfigurationName%\TestProjects.TestPluginAssembly3.*"  "%PluginDlls%\Plugin3" /Y