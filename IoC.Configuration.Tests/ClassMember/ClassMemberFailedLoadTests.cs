using IoC.Configuration.ConfigurationFile;
using IoC.Configuration.Tests.ClassMember.Services;
using IoC.Configuration.Tests.TestTemplateFiles;
using NUnit.Framework;
using System;
using System.Xml;
using OROptimizer.Utilities.Xml;
using TestsSharedLibrary.DependencyInjection;

namespace IoC.Configuration.Tests.ClassMember
{
    [TestFixture]
    public class ClassMemberFailedLoadTests : IoCConfigurationTestsBase
    {
        private void LoadConfigurationFile(DiImplementationType diImplementationType,
                                           Action<XmlDocument> modifyConfigurationFileOnLoad)
        {
            base.LoadConfigurationFile(diImplementationType, (container, configuration) => { }, null, modifyConfigurationFileOnLoad);
        }

        protected override string GetConfigurationRelativePath()
        {
            return "IoCConfiguration_classMember.xml";
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassDoesNotExist_ClassMemberElementTest(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/services/service",
                                                    (xmlElement) =>
                                                    {
                                                        return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Type) == typeof(int).FullName;
                                                    })
                                                .SelectChildElement("valueImplementation/classMember")
                                                .Remove(ConfigurationFileAttributeNames.DeclaringClassRef)
                                                .SetAttributeValue(ConfigurationFileAttributeNames.DeclaringClass,
                                   "IoC.Configuration.Tests.ClassMember.Services.IAppIds_Invalid");
                }), typeof(IClassMemberValueInitializer));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassMemberDoesNotExist_ClassMemberElementTest(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/services/service",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Type) == typeof(int).FullName;
                                   })
                               .SelectChildElement("valueImplementation/classMember")
                               .SetAttributeValue(ConfigurationFileAttributeNames.MemberName, "DefaultAppId_NonExistent");
                }), typeof(IClassMemberValueInitializer));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassMemberDoesNotHaveValidType_ClassMemberElementTest(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/services/service",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Type) == typeof(int).FullName;
                                   })
                               .SelectChildElement("valueImplementation/classMember")
                               .SetAttributeValue(ConfigurationFileAttributeNames.MemberName, nameof(IAppIds.DefaultAppDescription));
                }), typeof(ValueBasedServiceImplementationElement));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassDoesNotExist_ClassMemberPrefix(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/autoGeneratedServices/autoService",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Interface) == typeof(IAppIdToPriority).FullName;
                                   })
                               .SelectChildElement("autoMethod/if",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute("parameter1") == "_classMember:IAppIds.DefaultAppId";
                                   })
                               .SetAttributeValue("parameter1",
                                   "_classMember:IAppIds_Invalid.DefaultAppId");
                }), typeof(IAutoGeneratedMemberReturnValuesIfSelectorElement));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassMemberDoesNotExist_ClassMemberPrefix(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/autoGeneratedServices/autoService",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Interface) == typeof(IAppIdToPriority).FullName;
                                   })
                               .SelectChildElement("autoMethod/if",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute("parameter1") == "_classMember:IAppIds.DefaultAppId";
                                   })
                               .SetAttributeValue("parameter1",
                                   "_classMember:IAppIds.DefaultAppId_Invalid");
                }), typeof(IAutoGeneratedMemberReturnValuesIfSelectorElement));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassMemberDoesNotHaveValidType_ClassMemberPrefix(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/autoGeneratedServices/autoService",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.Interface) == typeof(IAppIdToPriority).FullName;
                                   })
                               .SelectChildElement("autoMethod/if",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute("parameter1") == "_classMember:IAppIds.DefaultAppId";
                                   })
                               .SetAttributeValue("parameter1",
                                   "_classMember:IAppIds.DefaultAppDescription");
                }), typeof(IAutoGeneratedMemberReturnValuesIfSelectorElement));
        }

        [TestCase(DiImplementationType.Autofac)]
        [TestCase(DiImplementationType.Ninject)]
        public void ClassMemberWithParametersDoesNotExist_ClassMemberElementTest(DiImplementationType diImplementationType)
        {
            Helpers.TestExpectedConfigurationParseException(() =>

                LoadConfigurationFile(diImplementationType, (xmlDocument) =>
                {
                    xmlDocument.SelectElement("/iocConfiguration/dependencyInjection/autoGeneratedServices/autoService/autoProperty/collection/classMember",
                                   (xmlElement) =>
                                   {
                                       return xmlElement.GetAttribute(ConfigurationFileAttributeNames.DeclaringClass) == typeof(IAppInfoFactory).FullName;
                                   })
                               .SelectChildElement("parameters").RemoveChildElement("string");
                }), typeof(CollectionItemValueElement));
        }
    }
}
