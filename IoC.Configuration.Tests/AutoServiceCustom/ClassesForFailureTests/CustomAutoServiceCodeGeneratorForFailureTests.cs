using IoC.Configuration.ConfigurationFile;
using IoC.Configuration.DiContainer;
using OROptimizer.DynamicCode;
using System;

namespace IoC.Configuration.Tests.AutoServiceCustom.ClassesForFailureTests;

public class CustomAutoServiceCodeGeneratorForFailureTests : ICustomAutoServiceCodeGenerator
{
    private readonly bool _simulateValidateFails;
    private readonly bool _simulateValidateOnIoCContainerLoadedFails;
    private readonly bool _simulateGenerateCSharpFailure;
    private readonly bool _simulateAssemblyBuildFailure;

    public CustomAutoServiceCodeGeneratorForFailureTests(bool simulateValidateFails, bool simulateValidateOnIoCContainerLoadedFails,
        bool simulateGenerateCSharpFailure, bool simulateAssemblyBuildFailure)
    {
        _simulateValidateFails = simulateValidateFails;
        _simulateValidateOnIoCContainerLoadedFails = simulateValidateOnIoCContainerLoadedFails;
        _simulateGenerateCSharpFailure = simulateGenerateCSharpFailure;
        _simulateAssemblyBuildFailure = simulateAssemblyBuildFailure;
    }
    public void Validate(ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo)
    {
        if (_simulateValidateFails)
            throw new Exception($"{nameof(Validate)} failed.");
    }

    public void ValidateOnIoCContainerLoaded(IDiContainer diContainer, ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo)
    {
        if (_simulateValidateOnIoCContainerLoadedFails)
            throw new Exception($"{nameof(ValidateOnIoCContainerLoaded)} failed.");
    }

    public void GenerateCSharp(ICustomAutoGeneratedServiceInfo customAutoGeneratedServiceInfo, IDynamicAssemblyBuilder dynamicAssemblyBuilder, string generatedClassNamespace, string generatedClassName)
    {
        if (_simulateGenerateCSharpFailure)
            throw new Exception($"{nameof(GenerateCSharp)} failed.");

        var dynamicallyGeneratedClass = dynamicAssemblyBuilder.StartDynamicallyGeneratedClass(generatedClassName,
            new [] { customAutoGeneratedServiceInfo .ImplementedInterface.FullName}, generatedClassNamespace);

        dynamicallyGeneratedClass.AddCode("public override int GetColor() => 10");

        if (!_simulateAssemblyBuildFailure)
            dynamicallyGeneratedClass.AddCode(";");

    }
}